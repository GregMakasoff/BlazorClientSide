// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolApi.Data;

namespace SchoolApi.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20200303185016_M1")]
    partial class M1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolLibrary.Speaker", b =>
                {
                    b.Property<string>("SpeakerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AreaOfSpec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Employer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpeakerId");

                    b.ToTable("Speakers");

                    b.HasData(
                        new
                        {
                            SpeakerId = "45939895-ff50-4abf-bc81-9e476740c66f",
                            AreaOfSpec = "Mechanics",
                            City = "Burnaby",
                            Email = "tomDay@gmail.com",
                            Employer = "BC Hydro",
                            FirstName = "Tom",
                            LastName = "Day",
                            MobileNumber = "778-859-3447",
                            Province = "BC"
                        },
                        new
                        {
                            SpeakerId = "f1b078ed-34f5-49b5-83f5-da025620a078",
                            AreaOfSpec = "Biomechanics",
                            City = "Burnaby",
                            Email = "fNight@gmail.com",
                            Employer = "Lex Luthor",
                            FirstName = "Fred",
                            LastName = "Night",
                            MobileNumber = "778-333-1465",
                            Province = "BC"
                        },
                        new
                        {
                            SpeakerId = "35c190dd-bab4-4314-82af-726e2e1e7e72",
                            AreaOfSpec = "Flatulence",
                            City = "Burnaby",
                            Email = "phillipKrak@gmail.com",
                            Employer = "Beans R' Us",
                            FirstName = "Phil",
                            LastName = "McKracken",
                            MobileNumber = "778-010-3111",
                            Province = "BC"
                        },
                        new
                        {
                            SpeakerId = "4fd72a47-538a-4793-8a7d-d4dbc9cbdd6f",
                            AreaOfSpec = "Prostate Exams",
                            City = "Burnaby",
                            Email = "getOuttaThere@gmail.com",
                            Employer = "Uncle Bob",
                            FirstName = "Ben",
                            LastName = "Dover",
                            MobileNumber = "778-859-6969",
                            Province = "BC"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
